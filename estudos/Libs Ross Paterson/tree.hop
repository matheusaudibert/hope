! a binary tree type

data tree alpha == Tip ++ Branch(alpha # tree alpha # tree alpha);

dec fold_tree : beta # (alpha # beta # beta -> beta) ->
		tree alpha -> beta;
--- fold_tree(e, n) Tip <= e;
--- fold_tree(e, n) (Branch(x, l, r)) <=
	n(x, fold_tree(e, n) l, fold_tree(e, n) r);

dec flatten : tree alpha -> list alpha;

private;

dec append : tree alpha # list alpha -> list alpha;
--- append(Tip, xs) <= xs;
--- append(Branch(x, l, r), xs) <= append(l, x::append(r, xs));

--- flatten t <= append(t, []);